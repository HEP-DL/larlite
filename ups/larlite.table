File=Table 
Product=larlite 
 
Group:

Flavor     = ANY
Qualifiers = "e9:prof"

  Action = GetProducts
    setupRequired( root v5_34_32 -q +e9:+nu:+prof )

Flavor     = ANY
Qualifiers = "e9:debug"

  Action = GetProducts
    setupRequired( root v5_34_32 -q +e9:+nu:+debug )

Flavor     = ANY
Qualifiers = "e9:opt"

  Action = GetProducts
    setupRequired( root v5_34_32 -q +e9:+nu:+opt )


Common:
  Action = setup
    prodDir()
    setupEnv()
    envSet(${UPS_PROD_NAME_UC}_VERSION, v1_00_00)

    # Set up required products, which is root
    exeActionRequired(GetProducts)

    envSet(LARLITE_BASEDIR,UPS_PROD_FLAVOR)
    envSet(LARLITE_ROOT6,0)
    envSet(LARLITE_COREDIR,UPS_PROD_FLAVOR/core)
    envSet(LARLITE_LIBDIR,UPS_PROD_FLAVOR/lib)
    envSet(LARLITE_USERDEVDIR,UPS_PROD_FLAVOR/UserDev)
    

    envSet(${UPS_PROD_NAME_UC}_LIB, ${${UPS_PROD_NAME_UC}_FQ_DIR}/lib) 
    if ( test `uname` = "Darwin" )
      envSet(LARLITE_CXX,clang++)
      pathPrepend(DYLD_LIBRARY_PATH, ${${UPS_PROD_NAME_UC}_LIB})
    else()
      envSet(LARLITE_CXX,g++)
      pathPrepend(LD_LIBRARY_PATH, ${${UPS_PROD_NAME_UC}_LIB})
    endif ( test `uname` = "Darwin" )

    # add the bin directory to the path
    pathPrepend(PATH, ${UPS_PROD_DIR}/bin )

    pathPrepend(FW_DATA, /nusoft/data/flux/)
    pathPrepend(FHICL_FILE_PATH, .:./job)

End:
# End Group definition
#*************************************************
